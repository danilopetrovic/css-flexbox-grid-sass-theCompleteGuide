da bi slike uzele 100% width ili heigth trebaju da imaju osobinu display: inline-block jer kada su inline uzimaju full size

background url("") center/cover;
filter: grayscale(40%);
width: 100%;
height: 100%;
position: fixed;
z-index: -1;

position vs units:
1) position:fixed - width:100% uzima prostor celov vw jer je fixna pozicija nezavisna od roditelja
2) position:absolute - ancestorContent+padding, uzme sirinu od roditelja+padding koji je relativno pozicioniran (pozicioniranje top ili bottom 50% ima razlicit efekat)
3) position: static ili relative - ancestorsContent (bez padding-a), najblizi block element roditelj

input[id*="terms"],
input[id*="terms"] + label {
	color: red;
}

font: inherit; - ne koristi default font na primer u input poljima formi nego uzme onaj koj si definisao

outline - kao border koristi se za fokus inpute

font-variant: small-caps; - sva capital slova samo mala i velika se razlikuju u velicini
font-stretch: ultra-condensed;

flex container
display: flex;
flex-direction: row,column;
flex-wrap: wrap;
flex-flow: <'flex-direction'> || <'flex-wrap'>; - (shrothand)
justify-content: center, space-between - main axis
align-content: center; - cross axis, kada se smanji i predje u drugi red
align-items: center; cross axis

flex items
order: 0 je default, 1 bude poslednji
align-self: flex-start, flex-end, baseline, stretch....;
flex-grow: - ostatak prostora deli na brojilac i imenilac pa koliko mu frakcija zadas
flex-shrink: 1 je default, 0 nece da se smanji, 5 brze ce se smanjivati;
flex-basis: 300px, 10%, auto - koliko zauzima na main-axis-u u zavisnosti dal je row ili column uzima sirinu ili visinu
flex: <flex-grow> <flex-shrink> <flex-basis> - 0 1 auto; je default - (shrothand)

grid
display: grid;
grid-template-columns: 200px 150px 20% 1fr;
grid-template-columns: repeat(4, 1fr);
grid-template-rows: 5rem auto;
grid-template-rows: 5rem minmax(10px, auto);
grid-template-rows: [row-1-start] 5rem [row-1-end row-2-start] minmax(10px, auto) [row-2-end row-3-start] 100px [row-3-end]; - davanje imena linijama izmedju
grid-column-start: 3;
grid-column-end: 5;
grid-column-end: span 2; -koliko kolona da se prosiri
grid-column-end: -1; -pocne da broji od kraja pa zauzme ceo red
grid-row-start: 1;
grid-row-end: 3;

grid-column: 1 / -1; <grid-column-start> / <grid-column-end> (shrothand) mora da ide kosa crta izmedju
grid-row: row-2-start / span 1; <grid-row-start> / <grid-row-end> (shrothand)
grid-area: <grid-row-start> / <grid-column-start> / <grid-row-end> / <grid-column-end> - (shrothand)

grid-column-gap: 15px;
grid-row-gap: 10px;
grid-gap: <grid-row-gap> <grid-column-gap>; - (shrothand)


definisanje preko templatea
grid-template-areas: "header header header header"
                     "side side main main"
                     "footer footer . ."; - ovo ide u greed container, tacka znaci da ostavi prazno polje
grid-area: header; - ovo ide u dete grida

fit-content(8rem); - funkcija koja radi slicno kao minmax, stavlja minimalno 8rem pa kada treba vise onda sam povecava

justify-items: center, start, end; - u grid container-u ubacis svojstvo kako bi bili pozicionirani u centar a ne u vise kolona stretchovano
align-items: center, start, end;
pozicioniranje celog grida (korisno ako se nadje u nekom elementu grid)
justify-content: center, start, end; pozicionira ceo grid horizontalno
align-content: center, start, end; pozicionira ceo grid vertikalno

overwriting positioning from parent to a single element
justify-self: center, start, end;
align-self: center, start, end;

automatsko dodavanje redova ili kolona
grid-auto-rows: auto, 10rem, minmax(8rem, auto); - default velicina svakog sledeceg reda ako nisu definisani redovi je auto ali moze da se promeni u drugu velicinu
grid-auto-flow: row, column; - default je row, dodavanje automatskog sadrzaja na desno umesto u sledece redove
grid-auto-flow: row dense; - zauzimanje praznog prostora (npr galerija)
grid-auto-columns: 5rem;

auto-fill & auto-fit - automatsko stvaranje kolona za onoliko elemenata koliko moze da se vidi u viewportu
grid-template-columns: repeat(auto-fill, 10rem);
grid-template-columns: repeat(auto-fit, 10rem); - ovaj ih i centrira

